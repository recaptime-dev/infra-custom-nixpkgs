name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # rebuild everyday at 2:51
    # TIP: Choose a random time here so not all repositories are build at once:
    # https://www.random.org/clock-times/?num=1&earliest=01%3A00&latest=08%3A00&interval=5&format=html&rnd=new
    - cron:  '51 2 * * *'
jobs:
  releaseops:
    strategy:
        matrix:
          nurRepo: ["recaptime-dev"]
          cachixName: ["recaptime-dev"]
          nixPath:
            - nixpkgs=channel:nixos-unstable
            - nixpkgs=channel:nixpkgs-unstable
            - nixpkgs=channel:nixos-23.05
    runs-on: ubuntu-latest
    steps:
    - name: Bulldoze disk space on hosted runners
      uses: insightsengineering/disk-space-reclaimer@v1
      with:
        tools-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        docker-images: true
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: cachix/install-nix-action@v25
      with:
        nix_path: "${{ matrix.nixPath }}"
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.RELEASEOPS_GITHUB_TOKEN }}
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Setup cachix
      uses: cachix/cachix-action@v12
      # Don't replace <YOUR_CACHIX_NAME> here!
      if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ matrix.cachixName }}
        authToken: '${{ secrets.RELEASEOPS_CACHIX_TOKEN }}'
        signingKey: '${{ secrets.RELEASEOPS_CACHIX_SIGNING_TOKEN }}'
    - name: Check evaluation
      run: |
        nix-env -f . -qa \* --meta --xml \
          --allowed-uris https://static.rust-lang.org \
          --option restrict-eval true \
          --option allow-import-from-derivation true \
          --drv-path --show-trace \
          -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
          -I $PWD \
          --verbose
    - name: Build nix packages
      run: |
        nix shell -f '<nixpkgs>' \
          nix-build-uncached \
          -c nix-build-uncached ci.nix \
          -A cacheOutputs \
          --verbose --show-trace
    - name: Trigger NUR update
      # Don't replace <YOUR_REPO_NAME> here!
      if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
      run: |
        curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ matrix.nurRepo }}"
        gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/nix-community/NUR/actions/runs \
          | jq '."workflow_runs"[0]'
      env:
        GITHUB_TOKEN: ${{secrets.GH_SERVICE_ACCOUNT_API_KEY}}
